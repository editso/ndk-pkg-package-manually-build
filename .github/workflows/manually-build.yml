name: manually build ndk-pkg packages

on:
  workflow_dispatch:
    inputs:

      package-name:
        description: input the package name to be built
        required: true
        default: zlib

      target-api:
        description: choose the min sdk api level to be built with
        type: choice
        options:
          - '33'
          - '32'
          - '31'
          - '30'
          - '29'
          - '28'
          - '27'
          - '26'
          - '25'
          - '24'
          - '23'
          - '22'
          - '21'

      target-abis:
        description: input android abis to be built for
        required: true
        default: arm64-v8a,armeabi-v7a,x86_64,x86

      build-type:
        description: choose a build type
        type: choice
        options:
          - release
          - debug

      link-type:
        description: choose a link type
        type: choice
        options:
          - static-prefered
          - static-only
          - shared-prefered
          - shared-only

      pack-type:
        description: choose a pack type
        type: choice
        options:
          - tar.xz
          - tar.lz
          - tar.gz
          - tar.bz2
          - zip

      log-level:
        description: choose a log-level
        type: choice
        options:
          - ''
          - '-q'
          - '-v'
          - '-vv'

      generate-maven-repo:
        description: generate maven local repository bundle
        type: boolean
        default: false

      maven-group-id:
        description: input the maven groupId, default is com.fpliu.ndk.pkg.prefab.android.<API>

jobs:
  build:

    runs-on: ubuntu-latest

    container: fpliu/ndk-pkg

    steps:
      - run: ndk-pkg env
      - run: ndk-pkg setup
      - run: ndk-pkg sysinfo
      - run: ndk-pkg update
      - run: |
          ls ~/.ndk-pkg/repos.d/offical-core/formula && \
          sed -e 's/libidn2//g' -e 's/dopatch/# dopatch/g' -i ~/.ndk-pkg/repos.d/offical-core/formula/gnutls.yml && \
          echo "\ndopatch: cat lib/puny_decode.c && sed 's/#ifdef HAVE_SYMVER_ALIAS_SUPPORT/#if 0/g' -i lib/puny_decode.c && sed 's/#ifdef HAVE_SYMVER_ALIAS_SUPPORT/#if 0/g' -i lib/puny_encode.c" >> ~/.ndk-pkg/repos.d/offical-core/formula/libidn2.yml
      - run: ndk-pkg install ${{ github.event.inputs.package-name }}:android-${{ github.event.inputs.target-api }}:${{ github.event.inputs.target-abis }} --build-type=${{ github.event.inputs.build-type }} --link-type=${{ github.event.inputs.link-type }} ${{ github.event.inputs.log-level }}
      - name: pack
        run: |
          set -ex
          for item in $(ndk-pkg ls-installed)
          do
              ndk-pkg pack "$item" -t ${{ github.event.inputs.pack-type }} -o .
          done

      - if: ${{ github.event.inputs.generate-maven-repo == 'true' }}
        name: generate maven local repository
        run: |
          set -ex

          GROUPID='${{ github.event.inputs.maven-group-id }}'

          [ -z "$GROUPID" ] && GROUPID='com.fpliu.ndk.pkg.prefab.android.${{ github.event.inputs.target-api }}'

          for item in $(ndk-pkg ls-installed | sed 's|:[^:]*$||' | sort | uniq)
          do
              PACKAGE_SPEC="$item:${{ github.event.inputs.target-abis }}"

              PACKAGE_XXXX="${PACKAGE_SPEC%%,*}"

              if [ -d "$HOME/.ndk-pkg/installed/$PACKAGE_XXXX/include" ] ; then
                  ndk-pkg deploy "$PACKAGE_SPEC" --local=maven-local-repository-bundle --groupId="$GROUPID"
              else
                  echo "no dev files."
              fi
          done

      - run: tar cJvf maven-local-repository-bundle.tar.xz maven-local-repository-bundle

      - run: ls

      - run: du -sh *.tar.xz

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.inputs.package-name }}-android${{ github.event.inputs.target-api }}
          path: ${{ github.workspace }}/*.tar.xz
